from typing import Any, Dict, Sequence, Optional, Union
from . import cursor, operations


class Collection:
    def find(self,
             filter: Dict[str, Any],
             projection: Optional[Dict[str, Any]]=None,
             cursor_type: Optional[cursor.CursorType]=None) -> Any: ...
    def delete_one(self, filter: Dict[str, Any]) -> Any: ...
    def insert_one(self, doc: Dict[str, Any]) -> Any: ...
    def replace_one(self, filter: Dict[str, Any], doc: Dict[str, Any], upsert: bool=False) -> Any: ...
    def update_one(self, filter: Dict[str, Any], doc: Dict[str, Any], upsert: bool=False) -> Any: ...
    def bulk_write(
        self,
        requests: Sequence[Union[operations.UpdateOne, operations.ReplaceOne]],
        ordered: bool = ...,
        bypass_document_validation: bool = ...) -> Any: ...
